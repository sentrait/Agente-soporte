{"version":3,"file":"static/js/438.385e648a.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","pages/DashboardPage.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from 'react';\nimport {\n  Box,\n  Grid,\n  Paper,\n  Typography,\n  Card,\n  CardContent,\n  CardHeader,\n} from '@mui/material';\nimport {\n  People as PeopleIcon,\n  Computer as ComputerIcon,\n  Settings as SettingsIcon,\n} from '@mui/icons-material';\nimport { useQuery } from '@tanstack/react-query';\nimport api from '../services/api';\n\nconst StatCard = ({ title, value, icon }) => (\n  <Card>\n    <CardContent>\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        {icon}\n        <Typography variant=\"h6\" component=\"div\" sx={{ ml: 1 }}>\n          {title}\n        </Typography>\n      </Box>\n      <Typography variant=\"h4\" component=\"div\">\n        {value}\n      </Typography>\n    </CardContent>\n  </Card>\n);\n\nconst DashboardPage = () => {\n  const { data: stats, isLoading } = useQuery(['dashboard-stats'], async () => {\n    const response = await api.get('/dashboard/stats/');\n    return response.data;\n  });\n\n  if (isLoading) {\n    return <Typography>Cargando...</Typography>;\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <StatCard\n            title=\"Total Clientes\"\n            value={stats?.totalClients || 0}\n            icon={<PeopleIcon color=\"primary\" />}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCard\n            title=\"Total Servidores\"\n            value={stats?.totalServers || 0}\n            icon={<ComputerIcon color=\"primary\" />}\n          />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <StatCard\n            title=\"Configuraciones\"\n            value={stats?.totalConfigs || 0}\n            icon={<SettingsIcon color=\"primary\" />}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Actividad Reciente\n            </Typography>\n            {/* Aquí iría la lista de actividad reciente */}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default DashboardPage; "],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","StatCard","_ref","title","value","icon","Card","children","_jsxs","CardContent","Box","sx","display","alignItems","mb","Typography","variant","ml","DashboardPage","data","stats","isLoading","useQuery","async","api","get","gutterBottom","Grid","container","spacing","item","xs","md","totalClients","PeopleIcon","color","totalServers","ComputerIcon","totalConfigs","SettingsIcon","p"],"sourceRoot":""}